name: CD-aws
'on':
  workflow_dispatch: null
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      
    name: Run Prisma Cloud IaC Scan to check 
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Scan on IaC files in the repository
        uses: prisma-cloud-shiftleft/iac-scan-action@v1
        id: iac-scan
        with:
          prisma_api_url: 'https://api.ind.prismacloud.io'
          access_key: 'cb30f999-9590-4a78-b708-1b665785e393'
          secret_key: 'PzCt06MnmSKMT4dQuvKlGNIps70='
          asset_name: 'goldenami'
          template_type: 'TF'
          template_version: '0.13'

        
   
      - name: Connecting GitHub Actions To AWS Using OIDC - Roles
        uses: aws-actions/configure-aws-credentials@master
        with:
         role-to-assume: arn:aws:iam::363638483937:role/test-pipelines
         role-session-name: github-actions-session
         aws-region: us-east-1
      - run: aws sts get-caller-identity
      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "1.8.3" # or `latest    
      - name: Packer Init #- Branches
        run: "packer init ./AWSpack.json.pkr.hcl"
        
      - name: Packer Init #- Branches
        run: "packer init ./AWSpack3.json.pkr.hcl"


      - name: Packer Build #- Branches
        run: "packer validate ./AWSpack.json.pkr.hcl"
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
         terraform_wrapper: false
      - name: Terraform Apply v1
        id:   apply
        env:
          TF_VAR_ec2_name:  "${{ github.event.inputs.ec2-name }}"
        run: |
          cd module/
          terraform init
          terraform validate
          terraform plan 
          
      - name: Packer Init #- Branches
        run: "packer init ./AWSpack2.json.pkr.hcl"

      - name: Packer Build #- Branches
        run: "packer validate ./AWSpack2.json.pkr.hcl"
        
      - name: Terraform Apply v2
        env:
          TF_VAR_ec2_name:  "${{ github.event.inputs.ec2-name }}"
        run: |
          cd module2/
          terraform init
          terraform validate
          terraform plan 
